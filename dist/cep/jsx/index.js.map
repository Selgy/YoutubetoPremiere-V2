{"version":3,"file":"index.js","sources":["../../../cep.config.ts","../../../src/shared/shared.ts","../../../src/jsx/ppro/ppro.ts","../../../src/jsx/index.ts"],"sourcesContent":["import { CEP_Config } from \"vite-cep-plugin\";\r\nimport { version } from \"./package.json\";\r\n\r\n// Add custom type declaration to extend CEF_Command\r\ndeclare module \"vite-cep-plugin\" {\r\n  type CEF_Command = \r\n    | \"--v=0\"\r\n    | \"--enable-nodejs\"\r\n    | \"--mixed-context\"\r\n    | \"--allow-file-access\"\r\n    | \"--allow-file-access-from-files\"\r\n    | \"--allow-insecure-localhost\";\r\n}\r\n\r\nconst config: CEP_Config = {\r\n  version,\r\n  id: \"com.YoutubetoPremiereV2.cep\",\r\n  displayName: \"YoutubetoPremiere V2\",\r\n  symlink: \"local\",\r\n  port: 4000,\r\n  servePort: 6000,\r\n  startingDebugPort: 8880,\r\n  extensionManifestVersion: 6.0,\r\n  requiredRuntimeVersion: 9.0,\r\n  hosts: [\r\n    { name: \"PPRO\", version: \"[0.0,99.9]\" }\r\n  ],\r\n  type: \"Panel\",\r\n  iconDarkNormal: \"./src/assets/light-icon.png\",\r\n  iconNormal: \"./src/assets/dark-icon.png\",\r\n  iconDarkNormalRollOver: \"./src/assets/light-icon.png\",\r\n  iconNormalRollOver: \"./src/assets/dark-icon.png\",\r\n  parameters: [\r\n    \"--v=0\",\r\n    \"--enable-nodejs\",\r\n    \"--mixed-context\",\r\n    \"--allow-file-access\",\r\n  ],\r\n  width: 500,\r\n  height: 550,\r\n\r\n  panels: [\r\n    {\r\n      mainPath: \"./main/index.html\",\r\n      name: \"main\",\r\n      panelDisplayName: \"YoutubetoPremiere\",\r\n      autoVisible: true,\r\n      width: 500,\r\n      height: 500,\r\n      minWidth: 400,\r\n      minHeight: 350,\r\n      maxWidth: 1200,\r\n      maxHeight: 800,\r\n      type: \"Modeless\",\r\n    },\r\n    {\r\n      mainPath: \"./settings/index.html\", \r\n      name: \"settings\", \r\n      autoVisible: false, \r\n      type: \"Custom\", \r\n      startOnEvents: [\"com.adobe.csxs.events.ApplicationInitialized\", \"applicationActive\"], \r\n      height: 1, \r\n    }\r\n  ],\r\n  build: {\r\n    jsxBin: \"off\",\r\n    sourceMap: true,\r\n  },\r\n  zxp: {\r\n    country: \"FR\",\r\n    province: \"CA\",\r\n    org: \"Selgy\",\r\n    password: \"test\",\r\n    tsa: \"http://timestamp.digicert.com/\",\r\n    sourceMap: false,\r\n    jsxBin: \"off\",\r\n  },\r\n  installModules: [],\r\n  copyAssets: [\r\n    \"./js\",\r\n    \"./jsx\",\r\n  ],\r\n  copyZipAssets: [],\r\n};\r\n\r\nexport default config;","import config from \"../../cep.config\";\r\nexport const ns = config.id;\r\n","export const example = () => {};","// @include './lib/json2.js'\n\nimport { ns } from \"../shared/shared\";\n\nimport * as ppro from \"./ppro/ppro\";\n\n//@ts-ignore\nconst host = typeof $ !== \"undefined\" ? $ : window;\n\n// A safe way to get the app name since some versions of Adobe Apps broken BridgeTalk in various places (e.g. After Effects 24-25)\n// in that case we have to do various checks per app to deterimine the app name\n\nconst getAppNameSafely = (): ApplicationName | \"unknown\" => {\n  const compare = (a: string, b: string) => {\n    return a.toLowerCase().indexOf(b.toLowerCase()) > -1;\n  };\n  const exists = (a: any) => typeof a !== \"undefined\";\n  const isBridgeTalkWorking =\n    typeof BridgeTalk !== \"undefined\" &&\n    typeof BridgeTalk.appName !== \"undefined\";\n\n  if (isBridgeTalkWorking) {\n    return BridgeTalk.appName;\n  } else if (app) {\n    //@ts-ignore\n    if (exists(app.name)) {\n      //@ts-ignore\n      const name: string = app.name;\n      if (compare(name, \"photoshop\")) return \"photoshop\";\n      if (compare(name, \"illustrator\")) return \"illustrator\";\n      if (compare(name, \"audition\")) return \"audition\";\n      if (compare(name, \"bridge\")) return \"bridge\";\n      if (compare(name, \"indesign\")) return \"indesign\";\n    }\n    //@ts-ignore\n    if (exists(app.appName)) {\n      //@ts-ignore\n      const appName: string = app.appName;\n      if (compare(appName, \"after effects\")) return \"aftereffects\";\n      if (compare(appName, \"animate\")) return \"animate\";\n    }\n    //@ts-ignore\n    if (exists(app.path)) {\n      //@ts-ignore\n      const path = app.path;\n      if (compare(path, \"premiere\")) return \"premierepro\";\n    }\n    //@ts-ignore\n    if (exists(app.getEncoderHost) && exists(AMEFrontendEvent)) {\n      return \"ame\";\n    }\n  }\n  return \"unknown\";\n};\n\nswitch (getAppNameSafely()) {\n  case \"premierepro\":\n  case \"premiereprobeta\":\n    host[ns] = ppro;\n    break;\n}\n\nexport type Scripts = typeof ppro\n\n// https://extendscript.docsforadobe.dev/interapplication-communication/bridgetalk-class.html?highlight=bridgetalk#appname\ntype ApplicationName =\n  | \"aftereffects\"\n  | \"aftereffectsbeta\"\n  | \"ame\"\n  | \"amebeta\"\n  | \"audition\"\n  | \"auditionbeta\"\n  | \"animate\"\n  | \"animatebeta\"\n  | \"bridge\"\n  | \"bridgebeta\"\n  // | \"flash\"\n  | \"illustrator\"\n  | \"illustratorbeta\"\n  | \"indesign\"\n  | \"indesignbeta\"\n  // | \"indesignserver\"\n  | \"photoshop\"\n  | \"photoshopbeta\"\n  | \"premierepro\"\n  | \"premiereprobeta\";\n"],"names":["version","id","displayName","symlink","port","servePort","startingDebugPort","extensionManifestVersion","requiredRuntimeVersion","hosts","name","type","iconDarkNormal","iconNormal","iconDarkNormalRollOver","iconNormalRollOver","width","height","panels","mainPath","panelDisplayName","autoVisible","minWidth","minHeight","maxWidth","maxHeight","startOnEvents","build","jsxBin","sourceMap","zxp","country","province","org","password","tsa","installModules","copyAssets","copyZipAssets","host"],"mappings":";;AAGA;;AAWA;AACEA;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACIC;AAAcV;AAAsB;AAExCW;AACAC;AACAC;AACAC;AACAC;;AAOAC;AACAC;AAEAC;AAEIC;AACAT;AACAU;AACAC;AACAL;AACAC;AACAK;AACAC;AACAC;AACAC;AACAd;AACF;AAEEQ;AACAT;AACAW;AACAV;AACAe;AACAT;AACF;AAEFU;AACEC;AACAC;;AAEFC;AACEC;AACAC;AACAC;AACAC;AACAC;AACAN;AACAD;;AAEFQ;AACAC;AAIAC;AACF;;AClFA;;ACDA;;;;;;;ACOA;;AAEA;AACA;;AAEA;;AAEI;;AAEF;;AAAmD;AACnD;AAIA;;;AAGE;AACA;AACE;AACA;;;;;;AAMF;AACA;AACA;AACE;AACA;;;AAGF;AACA;AACA;AACE;AACA;;AAEF;AACA;;AAEE;AACF;AACF;AACA;AACF;AAEA;AACE;AACA;AACEC;AACA;AACJ;;AAIA"}