#!/bin/bash

# Exit on any error
set -e

echo "=== YouTube to Premiere Pro - Post Install Script ==="

# Get the current logged-in user (not root)
loggedInUser=$( echo "show State:/Users/ConsoleUser" | scutil | awk '/Name :/ && ! /loginwindow/ { print $3 }' )
echo "Detected logged-in user: $loggedInUser"

# Get the UID of the logged-in user
uid=$(id -u "$loggedInUser")
echo "User UID: $uid"

# Enable PlayerDebugMode for Adobe CEP versions 6 to 11 in user context
echo "Enabling CEP PlayerDebugMode..."
for csxs_version in {6..11}; do
    launchctl asuser "$uid" sudo -u "$loggedInUser" defaults write com.adobe.CSXS."$csxs_version" PlayerDebugMode 1
    echo "  ‚úÖ Enabled PlayerDebugMode for CSXS.$csxs_version"
done

# Define paths
CEP_EXTENSIONS_DIR="/Library/Application Support/Adobe/CEP/extensions"
TARGET_DIR="$CEP_EXTENSIONS_DIR/com.selgy.youtubetopremiere"
EXECUTABLE_PATH="/Applications/YoutubetoPremiere"
CEP_SOURCE_PATH="/Applications/com.selgy.youtubetopremiere"

echo "=== Installation Paths ==="
echo "CEP Extensions Dir: $CEP_EXTENSIONS_DIR"
echo "Target Dir: $TARGET_DIR"
echo "Executable Path: $EXECUTABLE_PATH"
echo "CEP Source Path: $CEP_SOURCE_PATH"

# Create CEP extensions directory
echo "Creating CEP extensions directory..."
mkdir -p "$CEP_EXTENSIONS_DIR" && echo "‚úÖ Directory created successfully." || { echo "‚ùå Failed to create $CEP_EXTENSIONS_DIR"; exit 1; }

# Remove existing installation if it exists
if [ -d "$TARGET_DIR" ]; then
    echo "Existing installation found. Removing..."
    rm -rf "$TARGET_DIR" && echo "‚úÖ Existing directory removed." || { echo "‚ùå Failed to remove existing directory"; exit 1; }
fi

# Install CEP extension from the PKG
if [ -d "$CEP_SOURCE_PATH" ]; then
    echo "Installing CEP extension from PKG..."
    cp -R "$CEP_SOURCE_PATH" "$TARGET_DIR" && echo "‚úÖ CEP extension installed successfully." || { echo "‚ùå Failed to install CEP extension"; exit 1; }
else
    echo "‚ùå CEP source directory not found: $CEP_SOURCE_PATH"
    echo "Available in /Applications:"
    ls -la /Applications/ | grep -i youtube || echo "No YouTube-related directories found"
    exit 1
fi

# Create exec directory in CEP extension
EXEC_DIR="$TARGET_DIR/exec"
echo "Creating exec directory: $EXEC_DIR"
mkdir -p "$EXEC_DIR" && echo "‚úÖ Exec directory created successfully." || { echo "‚ùå Failed to create $EXEC_DIR"; exit 1; }

# Copy executable to CEP extension
if [ -d "$EXECUTABLE_PATH" ]; then
    echo "Copying executable to CEP extension..."
    cp -R "$EXECUTABLE_PATH/"* "$EXEC_DIR" && echo "‚úÖ Executable copied successfully." || { echo "‚ùå Failed to copy executable"; exit 1; }
else
    echo "‚ùå Executable directory not found: $EXECUTABLE_PATH"
    exit 1
fi

# Set proper permissions and ownership
echo "Setting permissions and ownership..."

# Change ownership to the logged-in user
chown -R "$loggedInUser:staff" "$TARGET_DIR"

# Set proper permissions
chmod -R 755 "$TARGET_DIR"

# Make sure executables are executable
if [ -f "$EXEC_DIR/YoutubetoPremiere" ]; then
    chmod +x "$EXEC_DIR/YoutubetoPremiere"
    echo "‚úÖ Made YoutubetoPremiere executable"
fi

# Find and make Python executables executable
find "$EXEC_DIR" -name "python*" -type f -exec chmod +x {} \;
find "$EXEC_DIR" -name "*.dylib" -type f -exec chmod 755 {} \;

# Remove quarantine attributes to avoid "cannot be opened" errors
echo "Removing quarantine attributes..."
xattr -dr com.apple.quarantine "$TARGET_DIR" 2>/dev/null || echo "No quarantine attributes to remove"

echo "‚úÖ Permissions and ownership set successfully"

# Cleanup: Remove the source directories from Applications
echo "=== Cleanup ==="
if [ -d "/Applications/YoutubetoPremiere" ]; then
    rm -rf "/Applications/YoutubetoPremiere" && echo "‚úÖ Deleted /Applications/YoutubetoPremiere" || echo "‚ö†Ô∏è Failed to delete /Applications/YoutubetoPremiere"
fi

if [ -d "/Applications/cep" ]; then
    rm -rf "/Applications/cep" && echo "‚úÖ Deleted /Applications/cep" || echo "‚ö†Ô∏è Failed to delete /Applications/cep"
fi

if [ -d "/Applications/com.selgy.youtubetopremiere" ]; then
    rm -rf "/Applications/com.selgy.youtubetopremiere" && echo "‚úÖ Deleted /Applications/com.selgy.youtubetopremiere" || echo "‚ö†Ô∏è Failed to delete /Applications/com.selgy.youtubetopremiere"
fi

# Final verification
echo "=== Installation Verification ==="
if [ -d "$TARGET_DIR" ]; then
    echo "‚úÖ CEP extension installed at: $TARGET_DIR"
    
    if [ -f "$TARGET_DIR/CSXS/manifest.xml" ]; then
        echo "‚úÖ Manifest file found"
    else
        echo "‚ùå Manifest file missing"
    fi
    
    if [ -d "$TARGET_DIR/exec" ]; then
        echo "‚úÖ Exec directory found"
        echo "Exec contents:"
        ls -la "$TARGET_DIR/exec" | head -10
    else
        echo "‚ùå Exec directory missing"
    fi
    
    echo "CEP extension size: $(du -sh "$TARGET_DIR" | cut -f1)"
else
    echo "‚ùå CEP extension installation failed"
    exit 1
fi

echo "=== Post Install Completed Successfully ==="
echo "üéâ YouTube to Premiere Pro has been installed!"
echo "üëâ Please restart Adobe Premiere Pro to see the extension."

exit 0 