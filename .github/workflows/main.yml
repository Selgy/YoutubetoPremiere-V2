name: Build and Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          
      - name: Build executable
        run: python -m PyInstaller YoutubetoPremiere.spec --workpath build/work --distpath build
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-macos-latest
          path: build/
          
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          
      - name: Build executable
        run: python -m PyInstaller YoutubetoPremiere.spec --workpath build/work --distpath build
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-windows-latest
          path: build/

  package:
    needs: [build-mac, build-windows]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build CEP Extension
        run: yarn build

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Move executables
        shell: pwsh
        run: |
          # Create exec directory if it doesn't exist
          New-Item -ItemType Directory -Force -Path dist/cep/exec
          
          # Move Windows executable
          $winExe = Get-ChildItem -Path artifacts/dist-windows-latest -Recurse -Filter "YoutubetoPremiere.exe" | Select-Object -First 1
          if ($winExe) {
            Copy-Item -Force $winExe.FullName "dist/cep/exec/"
          }
          
          # Move macOS executable
          $macExe = Get-ChildItem -Path artifacts/dist-macos-latest -Recurse -Filter "YoutubetoPremiere.app" | Select-Object -First 1
          if ($macExe) {
            $macBinary = Join-Path $macExe.FullName "Contents/MacOS/YoutubetoPremiere"
            Copy-Item -Force $macBinary "dist/cep/exec/YoutubetoPremiere"
          }
          
          # Debug: List contents
          Write-Host "Contents of dist/cep/exec:"
          Get-ChildItem -Recurse dist/cep/exec | ForEach-Object { Write-Host $_.FullName }

      - name: Download ZXPSignCmd
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path tools
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/Adobe-CEP/CEP-Resources/master/ZXPSignCMD/4.1.1/win64/ZXPSignCmd.exe" -OutFile "tools/ZXPSignCmd.exe"

      - name: Create Certificate
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path cert
          & tools/ZXPSignCmd.exe -selfSignedCert "FR" "IDF" "Mickael Ducatez" "YoutubetoPremiere" "1234" cert/certificate.p12

      - name: Package ZXP
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist/zxp
          & tools/ZXPSignCmd.exe -sign dist/cep dist/zxp/com.YoutubetoPremiereV2.cep.zxp cert/certificate.p12 1234

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./dist/zxp/com.YoutubetoPremiereV2.cep.zxp
          generate_release_notes: true
